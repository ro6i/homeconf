#!/bin/bash

parse_hsl() {
  # pastel outputs hsl in format: hsl(a, b.c%, d.e%)
  local hsl_raw="$(pastel format hsl "$1")"
  local hsl_1="${hsl_raw:4}"
  local hsl_2="${hsl_1::-1}"
  echo "$hsl_2"
}

mod_one() {
  local base="$1"
  local h_add="${2:-0}"
  local s_add="${3:-0}"
  local l_add="${4:-0}"
  local hsl_csv="$(parse_hsl "$base")"
  local hsl_components
  IFS=', ' hsl_components=($hsl_csv)
  local hsl_h="${hsl_components[0]}"
  local hsl_s="${hsl_components[1]::-1}"
  local hsl_l="${hsl_components[2]::-1}"
  local hsl_h_int="${hsl_h%.*}"
  local hsl_s_int="${hsl_s%.*}"
  local hsl_l_int="${hsl_l%.*}"
  local hsl_h_mod="$(( $hsl_h_int + $h_add ))"
  local hsl_s_mod=0
  local hsl_l_mod=0
  if [[ "$hsl_s_int" == 0 && "$hsl_l_int" != 0 ]]
  then
    hsl_l_mod=$(( $hsl_l_int + $l_add + 10 ))
  else
    hsl_l_mod="$(( $hsl_l_int + $l_add ))"
    hsl_s_mod="$(( $hsl_s_int + $s_add ))"
  fi
  pastel format hex "hsl($hsl_h_mod, $hsl_s_mod%, $hsl_l_mod%)"
}

adjust_octal_color_l() {
  local index="$(( $1 - 1 ))"
  local l="$2"
  local correction="${l_correction[$index]}"
  local r="$(( $l + $correction ))"
  >&2 echo "adjusted: index ($1) [$2] -> [$r]"
  echo "$r"
}

octet() {
  local lane_nr="$1"
  local class="$2"
  local s_add="$3"
  local l_add="$4"
  local hex
  local l_add_adjusted="$l_add"
  shift 4
  for c in {1..8}
  do
    local color="${!c}"
    >&2 echo "DEBUG: $index: $color -> $hex"
    if [[ $s_add == 0 && $l_add == 0 ]]
    then
      hex="#$color"
    else
      if [[ "$class" == 'fg' ]]
      then
        l_add_adjusted="$(adjust_octal_color_l "$(( $c + ($lane_nr - 1) * 8 ))" "$l_add")"
      fi
      hex="$(mod_one "$color" 0 "$s_add" "$l_add_adjusted")"
    fi
    # echo "echo -en \"\\e]4;$index;$hex\\e\\\\\""
    >&2 echo "$index: $color -> $hex"
    printf "\\e]4;$index;$hex\\e\\\\\n"
    index+=1
  done
}

heatmap() {
  local h_add
  for h_add in `seq 0 23`
  do
    local hue="$(printf '%.0f' "$(echo "$h_add * 15 + 5" | bc -l )")"
    local hex="$(mod_one "$1" "$hue" 0 0)"
    >&2 echo "$index -> $hex"
    printf "\\e]4;$index;$hex\\e\\\\\n"
    index+=1
  done
}

main() {
  echo "if [[ \"\$TERM\" != 'linux' ]]; then"
  printf "echo -en \""
  index=16
  # dim
  octet 1 fg 0  -15 "${fgn[@]}" 1
  octet 2 fg 0  -15 "${fga[@]}" 2
  # background
  octet 1 bg 0    0 "${bgn[@]}" 1
  octet 2 bg 0    0 "${bga[@]}" 2

  octet 1 fg 35   2 "${fgn[@]}" 1
  octet 2 fg 35   2 "${fga[@]}" 2
  # dim
  octet 1 fg 35 -15 "${fgn[@]}" 1
  octet 2 fg 35 -15 "${fga[@]}" 2
  # background
  octet 1 bg 20   1 "${bgn[@]}" 1
  octet 2 bg 20   1 "${bga[@]}" 2

  # heatmap b04f4f
  # heatmap c63939
  # heatmap d92626
  # heatmap ec1313
  echo '"'
  echo 'fi'
}

fgn=(000000 a65c59 728c54 a6845e 4e82a2 b1597d 54969c 888888)
fga=(3e3e3e a97660 8b8423 998a66 6174a8 82779c 5d8979 686868)

bgn=(1c1c1c 371d1b 232f18 2e291f 1c2643 381a38 142c2f 2a2a2a)
bga=(1c1c1c 35241d 312f0c 312d21 21283b 2b2636 1f2e28 2a2a2a)

l_correction=(0 5 -2 0 5 0 -5 0    0 0 -1 -4 10 8 -1 0)

declare -i index=0
main $@
