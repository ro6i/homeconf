set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

unbind C-b
set -g prefix C-Space
# set -g prefix2 C-Space

# switch to nested instance
bind C-Space send-prefix

set -wg mode-keys vi

set -g escape-time 0
set -s escape-time 0

set -g repeat-time 200 # default: 500

set-option -g history-limit 6000

set -g display-time 4000
set -g display-panes-time 20000

set -g status-interval 5
set -g status-left-length 20
set -g status-left "#[fg=yellow]#{session_name}  "
set -g status-right-length 80
set -g status-right "  #{?pane_synchronized, #[fg=brightyellow]██#[default] | ,}#[fg=green]#{pane_index}#[fg=brightwhite]/#[default]#{window_panes} | #{=50:pane_title} | #[default]#(inputsource) | #[default]#(battery) | #[fg=green]%H#[fg=brightwhite]:#[fg=brightgreen]%M #[fg=white]%a %d#[fg=brightwhite]-%b-%y"
set -g status-keys "vi"

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

set -g window-status-separator "  "
set -g window-status-format "#[fg=white]#I #[fg=brightwhite]#W#[fg=blue]#F"
set -g window-status-current-format "#[fg=brightred]#I #[fg=green]#W#[fg=yellow]#F"

set -g base-index 1
set -wg pane-base-index 1

set -g focus-events on
set -g mouse on
set -wg aggressive-resize on

set -g status-style bg=default,fg=white,none
set -g window-status-current-style fg=green,bg=default,none
set -g message-style bg=default,fg=default,none
set -wg mode-style bg=yellow,fg=black
set -g pane-border-style fg=brightblack

setw -g monitor-activity on
setw -g window-status-activity-attr none
setw -g visual-bell on
setw -g bell-action other
setw -g visual-silence off
setw -g monitor-silence 5

bind -r a select-pane -t .+1 \; resize-pane -Z
# search a session by part of its name (case insensitive) entered from command prompt and switch to that session
bind S command-prompt -p "part of session name:" "run-shell \"tmux ls -F '##{session_name}' | tr '[:lower:]' '[:upper:]' | grep $(echo '%%' | tr '[:lower:]' '[:upper:]') | head -n 1 | xargs tmux switch -t\""
bind / copy-mode \; send-key ?
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind C new-window -c '#{pane_current_path}'
# rename the name of current window to the name of current directory
bind > run-shell "echo '#{b:pane_current_path}' | tr '[:lower:]' '[:upper:]' | xargs tmux rename-window"
bind < run-shell "tmux rename-window ''"
# window auto-rename on
bind M-< set-option automatic-rename on

bind -T prefix K copy-mode -u
bind -T copy-mode-vi K send-keys -X halfpage-up
bind -T copy-mode-vi J send-keys -X halfpage-down

bind -r -T prefix C-K select-pane -U
bind -r -T prefix C-J select-pane -D
bind -r -T prefix C-H select-pane -L
bind -r -T prefix C-L select-pane -R

bind -r -T prefix C-n next-window
bind -r -T prefix C-p previous-window
bind -r -T prefix C-m move-window -r

bind -r -T prefix 0 choose-tree\; send-keys 0

# toggle input synchronization across all panes of the current window only
# bind C-I run-shell "if [[ `tmux show-options -w | grep 'synchronize-panes.*on'` ]]; then toggle=off; else export toggle=on; fi; tmux display-message \"sync panes tmux: \$toggle\"; tmux set-option -w synchronize-panes \$toggle &> /dev/null"
bind C-I set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'
# move window left or right (swap adjacent windows)
bind -r M-h run-shell "tmux swap-window -s :#I -t :$(( #I - 1 )) &> /dev/null; if [ $? -ne 0 ]; then tmux swap-window -s :#I -t :{session_windows}; fi;"
bind -r M-l run-shell "tmux swap-window -s :#I -t :$(( #I + 1 )) &> /dev/null; if [ $? -ne 0 ]; then tmux swap-window -s :#I -t :1; fi;"
